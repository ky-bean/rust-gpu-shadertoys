[package]
name = "shadertoys-wgpu"
version = "0.0.0"
publish = false
authors = []
edition = "2021"

[features]
default = ["use-compiled-tools"]
use-installed-tools = ["spirv-builder/use-installed-tools"]
use-compiled-tools = ["spirv-builder/use-compiled-tools"]

[dependencies]
shared = { path = "shared" }
futures = { version = "0.3", default-features = false, features = [
    "std",
    "executor"
] }
wgpu = { version = "25.0.0", features = [
    "spirv",
    "vulkan-portability"
] }
winit = { git = "https://github.com/rust-windowing/winit.git", rev = "cdbdd974fbf79b82b3fb1a4bc84ed717312a3bd2" }
bytemuck = "1.20.0"
env_logger = "0.11.6"
ouroboros = "0.18.5"

[build-dependencies]
spirv-builder.workspace = true

[workspace]
members = ["shaders", "shared"]

[workspace.dependencies]
spirv-builder = { git = "https://github.com/Rust-GPU/rust-gpu", rev = "20052f89d932ee88aba118488fc79393c407e61c", default-features = false }
spirv-std = { git = "https://github.com/Rust-GPU/rust-gpu", rev = "20052f89d932ee88aba118488fc79393c407e61c" }
libm = { version = ">=0.2.5, <=0.2.11", default-features = false }

# Compile build-dependencies in release mode with
# the same settings as regular dependencies.
[profile.release.build-override]
opt-level = 3
codegen-units = 16

# HACK(eddyb) also compile debug mode's build-dependencies with optimizations,
# because otherwise `rustc_codegen_spirv` (esspecially its linker) is too slow.
# Also `spirv-opt` *alone* takes (just) over an hour to run, though this only
# brings it down only to 10 minutes, so I've disabled it below, for now.
[profile.dev.build-override]
opt-level = 3

# HACK(eddyb) don't optimize the shader crate, to avoid `spirv-opt` taking
# a long time (10 minutes if itself was optimized, over an hour otherwise).
[profile.release.package."shadertoys-shaders"]
opt-level = 0

[workspace.lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = [
    'cfg(target_arch, values("spirv"))'
] }
